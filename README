
Install python3 python3-pip python3-postgresql

Install following python modules:
  pip3 install --upgrade asterisk-ami persist-queue selenium

To fetch data from google docs:
  pip3 install --upgrade google-api-python-client

Create database.json, gdocs.json, authorize host in google docs

Link data.py to cgi-bin folder.

/etc/asterisk/manager.conf should be readable to www-data

Добавление внешнего номера.

У оператора:
1. Получить внешний номер.
2. Создать внутренний номер; установить параметры записи, ограничить доступ по IP.
3. Настроить проход звонков с внешнего номера на внутренний.
4. Для внутреннего номера прописать АОН внешнего номера.

В базе:
5. Добавить в таблицу sip_users данные по номеру

6. Запустить gen_conf.sh

Добавление оператора:

1. Добавить в таблицу operators
2. Запустить database.py passwords для генерации пароля.

3. Запустить gen_conf.sh

Специальные тэги:
Переведён - ставится оператором, если он перевёл звонок.

=== JITSI install ===

wget -qO - https://download.jitsi.org/jitsi-key.gpg.key | sudo apt-key add -
echo 'deb https://download.jitsi.org stable/' > /etc/apt/sources.list.d/jitsi-stable.list


=== History ===

0.1 Первая версия, функциональность ручного обзвона и взодящих звонков
0.2 Настройка SIP клиента делается при запуске callcontrol
  Поддержка MicroSIP и Jitsi


=== Планы ===

Очередь исходящих звонков
Сделать тип ссылки для открытия окна вызова, в ней задать номер клиента и магазин
Передача атрибута при вызове originate?? order_id, lead_id
dial - возвращать статус успешности вызова: по результату закрывать/переназначать lead

Перенос на сервер модуля отслеживания вызовов
Окно звонка - свой коннект к серверу для отслеживания именно своего звонка (сейчас теряет внутренний канал при его пересоздании)

=== Установка сервера ===

1) link data.py to cgi-bin
2) install apache2-cgi
3) place database.json into cgi-bin
{ "host": "localhost", "database": "call_control", "user": "cc_data", "password": "xxxxxxxx"}
4) create database call_control, roles cc_data, cc_populate and cdr then run cc.sql
su - postgres -c 'psql call_control -f /opt/callcontrol/cc.sql'
